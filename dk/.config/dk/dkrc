#!/bin/sh
. /home/gaz/.config/dk/color.sh

# autostart
dbus-launch &
~/bin/autostart.sh &

# determine where to place the log file
logfile="$HOME/.dkrc.log"
[ -d "$HOME/.local/share/xorg" ] && logfile="$HOME/.local/share/xorg/dkrc.log"
: >"$logfile"

# (re)load sxhkd for keybinds
if hash sxhkd >/dev/null 2>&1; then
	pkill sxhkd
	sxhkd -c "$HOME/.config/dk/sxhkdrc" &
fi


{ # compound command to redirect all output

	# workspace settings
	# ------------------------

	# initialize 10 workspaces (1-10) (default: 1/monitor)
	dkcmd set numws=6
	# dkcmd set ws=_ pad t=0

	# default workspace '_' values used when allocating new workspaces
	# can be applied to all existing workspaces when passed 'apply' after ws=_
	dkcmd set ws=_ apply layout=tile master=1 stack=4 gap=3 msplit=0.55 ssplit=0.5 win_minwh=50
	dkcmd set ws=2 layout=mono
	dkcmd set ws=4 layout=mono

	# global settings
	# ---------------------

	# focus windows when receiving activation and enable focus-follows-mouse
	dkcmd set focus_open=true focus_urgent=true focus_mouse=false

	# place clients at the tail and ignore size hints on tiled windows
	dkcmd set tile_tohead=0 tile_hints=false

	# minimum width/height for resizing, and minimum allowed on-screen when moving
	dkcmd set win_minwh=50 win_minxy=30

	# disable gaps and borders in single window layouts
	dkcmd set smart_gap=false smart_border=true

	# define mouse mod and move/resize buttons
	dkcmd set mouse mod=super move=button1 resize=button3

	# border
	dkcmd set border width=2 outer_width=0 \
		colour \
		focus="$blue" \
		unfocus="$base" \
		urgent="$red" \
		outer_focus="$base" \
		outer_unfocus="$base" \
		outer_urgent="$base"

	#
	# window rules
	# --------------

	# rule class, instance, and title regexes (*ALWAYS* CASE INSENSITIVE)

	# open window(s) on a specific workspace (assigned monitor)

	# ws 1
	dkcmd rule \
		class="(alacritty|kitty|Zathura|firefox*|[Nn]avigator|\b[Cc]hromium\b|\b[Bb]rave\b)" \
		ws=1 focus=true

	# ws 2
	dkcmd rule \
		class="([Mm]arktext|[Ii]nsomnia|[Ee]asy[Tt]ag|[Cc]ode|[Ll]apce|DesktopEditors|glrnvim|[Vv]lc|[Tt]otem)" \
		ws=2 focus=true

	# ws 3
	dkcmd rule \
		class="(\b[Nn]autilus\b|[Nn]emo|[Cc]aja|Motrix|[Qq][Bb]ittorrent|[Kk]rita|GIMP*|GNU*Image*|\b[Gg]ithub\b)" \
		ws=3 focus=true

	# ws 4
	dkcmd rule \
		class="([Ll]utris|[Ss]telaris|Minecraft*|\btlauncher\b)" \
		ws=4 focus=true

	# ws 5
	dkcmd rule \
		class="(\bOBS\b|\bFlatseal\b|btop|Lxappearance|qt5ct|^Kvantum|^Firewall|[Aa]randr|disks$)" \
		ws=5 focus=true

	# ws 6
	dkcmd rule class="(Stremio|[Rr]hythmbox)" \
		ws=6 focus=true

	# floaters
	dkcmd rule \
		class="([Ff]lameshot|Nitrogen|xdg-desktop-portal-gnome|copyq|nmtui|[Nn]m-connection-editor|[Gg]pick)" \
		float=true focus=true stick=true y=center x=center
	dkcmd rule title="(^Library$|^Pick$)" float=true focus=true

	# scratchpads
	dkcmd rule class="(pulsemixer)" w=600 h=300 float=true focus=true stick=true x=center y=center
	# dkcmd rule class="(musikcube)" w=800 h=800 float=true focus=true stick=true x=center y=center
	dkcmd rule \
		class="(dropdown|note|musikcube)" \
		w=900 h=700 float=true focus=true stick=true x=center y=center

	# open window(s) and use a callback function (user defined in config.h)
	# we also ignore=true to stop the window from being resized on it's own from events
	# eg. mpv --x11-name=albumart /path/to/media
	dkcmd rule class="^mpv$" instance="^albumart$" float=true ignore=true callback=albumart bw=0

	# apply current rule set to all existing windows
	dkcmd rule apply '*'

	# delete all rules
	# dkcmd rule remove '*'

} >>"$logfile" 2>&1 # append responses

# inform of any errors in a notification
if grep -q 'error:' "$logfile"; then
	hash notify-send && notify-send -t 0 -u critical "dkrc has errors" \
		"$(awk '/error:/ {sub(/^error: /, ""); gsub(/</, "\<"); print}' "$logfile")"
	exit 1
fi

exit 0
