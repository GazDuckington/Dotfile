# 
# ██╗     ███████╗██████╗  ██████╗
# ██║     ██╔════╝██╔══██╗██╔════╝
# ██║     █████╗  ██████╔╝██║     
# ██║     ██╔══╝  ██╔══██╗██║     
# ███████╗██║     ██║  ██║╚██████╗
# ╚══════╝╚═╝     ╚═╝  ╚═╝ ╚═════╝

# settings
set shell				sh
set previewer		~/.config/lf/lf_kitty_preview
set cleaner			~/.config/lf/lf_kitty_clean
set icons				true
set ignorecase	true

# commands
cmd open				$xdg-open "$f"
cmd trash				%trash-put -i "$fx"
cmd setroot			$hsetroot -cover "$f"


cmd mkdir %{{
     printf "Make directory: "
    read ans
    mkdir -p $ans
}}

cmd touch %{{
    printf "Make file: "
    read ans
    touch "$ans"
}}

cmd fzf-restore ${{
    ids="$(echo -ne '\n'																				| \
      trash-restore																							| \
      awk '$1 ~ /^[0-9]+/ {print $0}'														| \
      fzf --multi --reverse --header='Choose item to restore'		| \
      awk '{print $1}'																					| \
      sed -z 's/\n/,/g;s/,$/\n/')"
    echo $ids | trash-restore 
    clear
}}

cmd fzf_jump ${{
    res="$(fd . --maxdepth 2 -H										| \
			fzf --reverse --header='Jump to location'		| \
			sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ] ; then
        cmd="cd"
    elif [ -f "$res" ] ; then
        cmd="\$xdg\-open"
    else
        exit 0
    fi
    lf -remote "send $id $cmd \"$res\""
}}

cmd fzf_search ${{
    res="$( \
        RG_PREFIX="rg --column --line-number --no-heading --color=always \
            --smart-case "
        FZF_DEFAULT_COMMAND="$RG_PREFIX ''" \
            fzf --bind "change:reload:$RG_PREFIX {q} || true" \
            --ansi --layout=reverse --header 'Search in files' \
            | cut -d':' -f1
    )"
    [ ! -z "$res" ] && lf -remote "send $id select \"$res\""
}}

# keybinds
map gs					fzf_search
map gf					fzf_jump
map gu					fzf-restore
map gd					mkdir
map gf					touch
map y						copy
map x						cut
map p						paste
map d						trash
map D						delete
map <c-q>				quit

# bookmarks
map gm					cd /run/media/
map gt					cd ~/.local/share/Trash/files/
map bc					$xdg-open ~/.config/lf/lfrc
map br					$br.sh
